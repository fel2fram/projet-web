{"ast":null,"code":"var _jsxFileName = \"/Users/hugo/Downloads/frontend/src/component/EmployeeComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport EmployeeDataService from '../service/EmployeeDataService';\n\nclass EmployeeComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      description: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.id); // eslint-disable-next-line\n\n    if (this.state.id == -1) {\n      return;\n    }\n\n    EmployeeDataService.retrieveEmployee(this.state.id).then(response => this.setState({\n      firstname: response.data.firstname,\n      email: response.data.email,\n      lastname: response.data.lastname\n    }));\n  }\n\n  onSubmit(values) {\n    let employee = {\n      id: this.state.id,\n      firstname: values.firstname,\n      email: values.email,\n      lastname: values.lastname,\n      targetDate: values.targetDate\n    };\n\n    if (this.state.id === -1) {\n      EmployeeDataService.createEmployee(employee).then(() => this.props.history.push('/Employees'));\n    } else {\n      EmployeeDataService.updateEmployee(this.state.id, employee).then(() => this.props.history.push('/employees'));\n    }\n\n    console.log(values);\n  }\n\n  render() {\n    let {\n      firstname,\n      lastname,\n      email,\n      id\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Employee\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        id,\n        firstname,\n        lastname,\n        email\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      enableReinitialize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, props => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"description\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }\n    }, \"Firstname\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"firstname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }\n    }, \"Lastname\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"lastname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 39\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      type: \"button\",\n      onClick: () => this.props.history.push('/employees'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 39\n      }\n    }, \"Cancel\"))))));\n  }\n\n}\n\nexport default EmployeeComponent;","map":{"version":3,"sources":["/Users/hugo/Downloads/frontend/src/component/EmployeeComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","EmployeeDataService","EmployeeComponent","constructor","props","state","id","match","params","description","onSubmit","bind","componentDidMount","console","log","retrieveEmployee","then","response","setState","firstname","data","email","lastname","values","employee","targetDate","createEmployee","history","push","updateEmployee","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;;AAGA,MAAMC,iBAAN,SAAgCN,SAAhC,CAA0C;AACtCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,EADnB;AAETG,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AAEH;;AAEDC,EAAAA,iBAAiB,GAAG;AAEhBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,EAAvB,EAFgB,CAIhB;;AACA,QAAI,KAAKD,KAAL,CAAWC,EAAX,IAAiB,CAAC,CAAtB,EAAyB;AACrB;AACH;;AAEDL,IAAAA,mBAAmB,CAACc,gBAApB,CAAsC,KAAKV,KAAL,CAAWC,EAAjD,EACKU,IADL,CACUC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAC5BC,MAAAA,SAAS,EAAEF,QAAQ,CAACG,IAAT,CAAcD,SADG;AAE5BE,MAAAA,KAAK,EAAEJ,QAAQ,CAACG,IAAT,CAAcC,KAFO;AAG5BC,MAAAA,QAAQ,EAAEL,QAAQ,CAACG,IAAT,CAAcE;AAHI,KAAd,CADtB;AAMH;;AAGDZ,EAAAA,QAAQ,CAACa,MAAD,EAAS;AAGb,QAAIC,QAAQ,GAAG;AACXlB,MAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,EADJ;AAEXa,MAAAA,SAAS,EAAEI,MAAM,CAACJ,SAFP;AAGXE,MAAAA,KAAK,EAAEE,MAAM,CAACF,KAHH;AAIXC,MAAAA,QAAQ,EAAEC,MAAM,CAACD,QAJN;AAKXG,MAAAA,UAAU,EAAEF,MAAM,CAACE;AALR,KAAf;;AAQA,QAAI,KAAKpB,KAAL,CAAWC,EAAX,KAAkB,CAAC,CAAvB,EAA0B;AACtBL,MAAAA,mBAAmB,CAACyB,cAApB,CAAmCF,QAAnC,EACKR,IADL,CACU,MAAM,KAAKZ,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB,CADhB;AAEH,KAHD,MAGO;AACH3B,MAAAA,mBAAmB,CAAC4B,cAApB,CAAmC,KAAKxB,KAAL,CAAWC,EAA9C,EAAkDkB,QAAlD,EACKR,IADL,CACU,MAAM,KAAKZ,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB,CADhB;AAEH;;AAEDf,IAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACH;;AAEDO,EAAAA,MAAM,GAAG;AAEL,QAAI;AAAEX,MAAAA,SAAF;AAAYG,MAAAA,QAAZ;AAAqBD,MAAAA,KAArB;AAA4Bf,MAAAA;AAA5B,QAAmC,KAAKD,KAA5C;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,aAAa,EAAE;AAAEC,QAAAA,EAAF;AAAMa,QAAAA,SAAN;AAAgBG,QAAAA,QAAhB;AAAyBD,QAAAA;AAAzB,OADnB;AAEI,MAAA,QAAQ,EAAE,KAAKX,QAFnB;AAGI,MAAA,gBAAgB,EAAE,KAHtB;AAII,MAAA,cAAc,EAAE,KAJpB;AAKI,MAAA,kBAAkB,EAAE,IALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQSN,KAAD,iBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,aAAnB;AAAiC,MAAA,SAAS,EAAC,KAA3C;AACI,MAAA,SAAS,EAAC,qBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,IAAI,EAAC,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAJJ,eAQI;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,IAAI,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CARJ,eAYI;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,IAAI,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAZJ,eAgBI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,IAAI,EAAC,QAA3C;AACI,MAAA,OAAO,EAAE,MAAM,KAAKA,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAhBJ,CATZ,CADJ,CAFJ,CADJ;AA4CH;;AArGqC;;AAwG1C,eAAe1B,iBAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport EmployeeDataService from '../service/EmployeeDataService';\n\n\nclass EmployeeComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            description: ''\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        console.log(this.state.id)\n\n        // eslint-disable-next-line\n        if (this.state.id == -1) {\n            return\n        }\n\n        EmployeeDataService.retrieveEmployee( this.state.id)\n            .then(response => this.setState({\n                firstname: response.data.firstname,\n                email: response.data.email,\n                lastname: response.data.lastname\n            }))\n    }\n\n\n    onSubmit(values) {\n\n\n        let employee = {\n            id: this.state.id,\n            firstname: values.firstname,\n            email: values.email,\n            lastname: values.lastname,\n            targetDate: values.targetDate\n        }\n\n        if (this.state.id === -1) {\n            EmployeeDataService.createEmployee(employee)\n                .then(() => this.props.history.push('/Employees'))\n        } else {\n            EmployeeDataService.updateEmployee(this.state.id, employee)\n                .then(() => this.props.history.push('/employees'))\n        }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { firstname,lastname,email, id } = this.state\n\n        return (\n            <div>\n                <h3>Employee</h3>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ id, firstname,lastname,email }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n\n                                    <fieldset className=\"form-group\">\n                                        <label>Firstname</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"firstname\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Lastname</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"lastname\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Email</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"email\" />\n                                    </fieldset>\n                                    <div className=\"btn-div\">\n                                      <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                      <button className=\"btn btn-secondary\" type=\"button\"\n                                          onClick={() => this.props.history.push('/employees')}>\n                                          Cancel\n                                          </button>\n                                    </div>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EmployeeComponent\n"]},"metadata":{},"sourceType":"module"}